" vim: set foldenable foldmethod=marker:

let $VIMDIR = expand('<script>:h')

augroup MyAutoCmd
  autocmd!
augroup END

" dpp.vim {{{
const s:dpp_base = expand('$HOME/.local/share/vim/dpp/')
const s:dpp_src = s:dpp_base .. 'repos/github.com/Shougo/dpp.vim'
if !s:dpp_src->isdirectory()
  execute '!git clone https://github.com/Shougo/dpp.vim.git ' .. s:dpp_src
endif
execute 'set runtimepath^=' .. s:dpp_src

if dpp#min#load_state(s:dpp_base)
  for s:plugin in [
    \ 'Shougo/dpp-ext-installer',
    \ 'Shougo/dpp-ext-lazy',
    \ 'Shougo/dpp-ext-toml',
    \ 'Shougo/dpp-protocol-git',
    \ 'vim-denops/denops.vim',
    \ ]
    let s:plugin_dir = s:dpp_base .. 'repos/github.com/' .. s:plugin
    if !s:plugin_dir->isdirectory()
      execute '!git clone https://github.com/' .. s:plugin .. '.git ' .. s:plugin_dir
    endif
    execute 'set runtimepath^=' .. s:plugin_dir
  endfor

  autocmd MyAutoCmd User DenopsReady
    \ : echohl WarningMsg
    \ | echomsg 'dpp make_state() is failed'
    \ | echohl NONE
    \ | call dpp#make_state(s:dpp_base, expand('<script>:h') .. '/dpp/config.ts')
else
  autocmd MyAutoCmd BufWritePost vimrc,*.vim,*.toml,*.ts
    \ call dpp#check_files()
endif

autocmd MyAutoCmd User Dpp:makeStatePost
  \ : echohl WarningMsg
  \ | echomsg 'dpp make_state() is done'
  \ | echohl NONE
"}}}

unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

" 1 important {{{
set nocompatible
"}}}
" 2 moving around, searching and patterns {{{
set autochdir
set nowrapscan
set incsearch
set magic
set ignorecase
set smartcase
"}}}
" 3 tags {{{
set tags=./tags,tags
"}}}
" 4 displaying text {{{
set scrolloff=5
set nowrap
set list
set listchars+=tab:>-
set listchars+=trail:-
set listchars+=eol:>
set listchars+=nbsp:%
set listchars+=extends:>
set listchars+=precedes:<
"}}}
" 5 syntax, highlighting and spelling {{{
set hlsearch
set cursorline
"}}}
" 6 multiple windows {{{
set laststatus=2
set hidden
"}}}
" 7 multiple tab pages {{{
"}}}
" 8 terminal {{{
"}}}
" 9 using the mouse {{{
"}}}
"11 printing {{{
"}}}
"12 messages and info {{{
set showcmd
set showmode
set ruler
set novisualbell
set helplang=ja
"}}}
"13 selecting text {{{
set clipboard=unnamed,autoselect
"}}}
"14 editing text {{{
set noundofile
set showmatch
"}}}
"15 tabs and indenting {{{
"}}}
"16 folding {{{
"}}}
"17 diff mode {{{
"}}}
"18 mapping {{{
"}}}
"19 reading and writing files {{{
set nobackup
set autoread
"}}}
"20 the swap file {{{
set noswapfile
"}}}
"21 command line editing {{{
set wildmenu
"}}}
"22 executing external commands {{{
"}}}
"23 running make and jumping to errors (quickfix) {{{
"}}}
"24 language specific {{{
"}}}
"25 multi-byte characters {{{
"}}}
"26 various {{{
"}}}

" keymap {{{
let mapleader="\<space>"
noremap <leader>o :Ddu file_rec<CR>
" }}}
