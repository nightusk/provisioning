# vim:foldmethod=marker

# Shougo {{{
# ddc.vim {{{
[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = [
  'InsertEnter',
]
depends = [
  'ddc-matcher_head',
  'ddc-sorter_rank',
  'ddc-source-around',
  'ddc-ui-native',
  'denops.vim',
]
hook_source = '''
  call ddc#custom#patch_global(#{
\   ui: 'native',
\   sources: [
\     'around',
\     'skkeleton',
\   ],
\   sourceOptions: #{
\     _: #{
\       matchers: [
\         'matcher_head',
\       ],
\       sorters: [
\         'sorter_rank',
\       ],
\     },
\     arround: #{
\       mark: 'A',
\     },
\     skkeleton: #{
\       mark: 'J',
\       matchers: ['skkeleton'],
\       sorters: [],
\       isVolatile: v:true,
\     },
\   },
\ })
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-source-around'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-ui-native'
# }}}
# ddu {{{
[[plugins]]
repo = 'Shougo/ddu.vim'
on_event = [
  'VimEnter',
]
depends = [
  'ddu-commands.vim',
  'ddu-filter-matcher_substring',
  'ddu-kind-file'
  'ddu-source-file_rec',
  'ddu-ui-ff',
  'denops.vim',
]
hook_source = '''
  call ddu#custom#patch_global(#{
\   ui: 'ff',
\   uiParams: #{
\     ff: #{
\       startFilter: v:true
\     },
\   },
\   sources: [
\     #{ name: 'file_rec', params: {}},
\   ],
\   sourceOptions: #{
\     _: #{
\       matchers: ['matcher_substring'],
\     },
\   },
\   kindOptions: #{
\     file: #{
\       defaultAction: 'open',
\     },
\   },
\ })
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
hook_add = '''
  nnoremap <Leader>o :Ddu file_rec<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
hook_add = '''
  autocmd FileType ddu-ff call s:ddu_ff_my_settings()
  function s:ddu_ff_my_settings() abort
    nnoremap <buffer> <CR>
    \ <Cmd>call ddu#ui#do_action('itemAction')<CR>
    nnoremap <buffer> <Space>
    \ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
    nnoremap <buffer> i
    \ <Cmd>call ddu#ui#do_action('openFilterWindow')<CR>
    nnoremap <buffer> q
    \ <Cmd>call ddu#ui#do_action('quit')<CR>
  endfunction

  autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
  function s:ddu_ff_filter_my_settings() abort
    inoremap <buffer> <CR>
    \ <Esc><Cmd>call ddu#ui#do_action('closeFilterWindow')<CR>
    nnoremap <buffer> <CR>
    \ <Cmd>call ddu#ui#do_action('closeFilterWindow')<CR>
  endfunction
'''
# }}}
# }}}

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = [
  'VimEnter',
]

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = [
  'InsertEnter',
]

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_event = [
  'VimEnter',
]

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = [
  'InsertEnter',
]

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = [
  'html',
  'css',
]
hook_add =  '''
  "let g:user_emmet_install_global = 0
  "autocmd FileType html,css EmmetInstall
'''

[[plugins]]
repo = 'powerline/powerline'
rtp = 'powerline/bindings/vim/'

[[plugins]]
repo = 'tpope/vim-unimpaired'
on_event = [
  'VimEnter',
]

[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = [
  'VimEnter',
]

[[plugins]]
repo = 'vim-skk/skkeleton'
on_event = [
  'InsertEnter',
]
hook_add = '''
  imap <C-\> <Plug>(skkeleton-toggle)
'''

[[plugins]]
repo = 'ziglang/zig.vim'
